/* --------- mixins --------- */

@mixin inlineblock {
	display: inline-block;
	vertical-align: top;
}

@mixin clearfix {
    &:before,
	&:after {
		content: "";
		display: table;
	}
	
	&:after {
		clear: both;
	}
}

@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

@mixin box-shadow ($string...) {
	-webkit-box-shadow: $string;
	-moz-box-shadow:    $string;
	box-shadow:         $string;
}

@mixin transition ($transition...) {
	-webkit-transition: $transition;
	-moz-transition:    $transition;
	-ms-transition:     $transition;
	-o-transition:      $transition;
	transition:      $transition;
}


@mixin placecolor($color: #000000) {
    &::-webkit-input-placeholder {
        color: $color;
    }
    &:-moz-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
}

@mixin vertical-gradient ($top-color: #ffffff, $bottom-color: #000000) {
	background-color: $top-color;
	background-image: -webkit-gradient(linear, left top, left bottom, from($top-color), to($bottom-color)); /* Chrome, Safari 4+ */
	background-image: -webkit-linear-gradient(top, $top-color, $bottom-color); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
	background-image:    -moz-linear-gradient(top, $top-color, $bottom-color); /* Firefox 3.6-15 */
	background-image:      -o-linear-gradient(top, $top-color, $bottom-color); /* Opera 11.10-12.00 */
	background-image:         linear-gradient(to bottom, $top-color, $bottom-color); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=$top-color, EndColorStr=$bottom-color);
}
/*-------------------social----------------------------*/

@mixin get-sprite ($map, $icon) {
  $sprite-image: sprite-file($map, $icon);
  $sprite-map: sprite-url($map);
  $sprite-position: sprite-position($map, $icon);

  background: $sprite-map $sprite-position no-repeat;

  $sprite-height: image-height($sprite-image);
  $sprite-width: image-width($sprite-image);

  height: $sprite-height;
  width: $sprite-width;
}
/*--------------------------------------grid------------------------------------*/

// Compass is only used for these first two selectors:
.pull-left{
  float: left;
}
.pull-right{
  float: right;
}
* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
.row { @include clearfix; }

// Customizables
$grid-gutter: 20px; // Total space between columns
$grid-breakpoint: 800px; // Grid columns will stack below this point

[class^="span"],
[class*="span"] {
  display: block;
  padding: 0;
  width: 100%;
  margin-bottom: $grid-gutter;

  @media (min-width: $grid-breakpoint) {
    float: left;
    padding: 0 $grid-gutter / 2;
    &:first-child { padding-left:  0; }
    &:last-child  { padding-right: 0; }
  }
}


// So that you don't need to wrap span-full in a row container
.span12,
.span-full {
  width: 100%;
  float: none;
  padding: 0;
}

// 12-col grid
$col: 100% / 12;
@media (min-width: $grid-breakpoint) {
  .span1  { width: $col;      }
  .span2  { width: $col * 2;  }
  .span3  { width: $col * 3;  }
  .span4  { width: $col * 4;  }
  .span5  { width: $col * 5;  }
  .span6  { width: $col * 6;  }
  .span7  { width: $col * 7;  }
  .span8  { width: $col * 8;  }
  .span9  { width: $col * 9;  }
  .span10 { width: $col * 10; }
  .span11 { width: $col * 11; }
  .span12 { width: $col * 12; }
}

// Semantic aliases
.span-full           { @extend .span12; } // 100%
.span-half           { @extend .span6;  } // 50%
.span-third,
.span-one-third      { @extend .span4;  } // 33.333%
.span-two-thirds     { @extend .span8;  } // 67.666%
.span-quarter,
.span-one-quarter    { @extend .span3;  } // 25%
.span-three-quarters { @extend .span9;  } // 75%

// End of the important stuff


// Just for show
// -------------------------


//.container {
//  width: 80%;
//  max-width: 900px;
//  margin: 0 auto;
//}


h1,h2,p {
  margin: 10px 0;
}

.embed-ex {
  background: #b2e3e1;
  &:first-of-type { padding-top: $grid-gutter; }
}